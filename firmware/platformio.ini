; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
src_dir =  ./src
build_dir = ./pioenvs
;lib_dir = ./piolib
;lib_extra_dirs = ./drivers
lib_dir = ./drivers
libdeps_dir = ./piolibdeps
;libdeps_dir = ${platformio.workspace_dir}\piolibdeps
;default_envs = lcr_meter_stm32f103c8
;default_envs = win_stm32f103c8_release          ; can't use release mode - yet (float math problems in release mode)
default_envs = win_stm32f103c8_debug

[env:lcr_meter_stm32f103c8]
platform = ststm32
;board = genericSTM32F103C8
board = bluepill_f103c8
board_build.f_cpu = 72000000L
board_build.ldscript = STM32F103C8_FLASH_platformio.ld
framework = stm32cube
upload_protocol = cmsis-dap
debug_tool = cmsis-dap
build_type = debug
board_build.stm32cube.custom_config_header = yes
board_build.stm32cube.system_file = yes
build_flags =
    -Idrivers/STM32F1xx_HAL_Driver/Inc 
    -Idrivers/STM32F1xx_HAL_Driver/Inc/Legacy 
    -Idrivers/CMSIS/Device/ST/STM32F1xx/Include 
    -Idrivers/CMSIS/Include 
 	-std=c++11
;	-std=c++14
;	-std=c++17
;	-std=c++20
	-Wl,-u,_printf_float
	-D DEBUG
	-DDEBUG_LEVEL=0
	-O0

[env:win_stm32f103c8_release]
platform = ststm32
board = genericSTM32F103C8
board_build.f_cpu = 72000000L
board_build.ldscript = STM32F103C8_FLASH_platformio.ld
framework = stm32cube
upload_protocol = stlink
upload_flags = -c set CPUTAPID 0x2ba01477                 ; because they use a clone STM32F103 on the PCB
;build_type = release                                      ; causes the program to error :(
build_type = debug                                        ; this fixes it - need to find the problem !!
board_build.stm32cube.custom_config_header = yes
board_build.stm32cube.system_file = yes
build_flags =
    -Idrivers/STM32F1xx_HAL_Driver/Inc 
    -Idrivers/STM32F1xx_HAL_Driver/Inc/Legacy 
    -Idrivers/CMSIS/Device/ST/STM32F1xx/Include 
    -Idrivers/CMSIS/Include 
;   -std=gnu++11
	-std=c++11
;	-std=c++14
;	-std=c++17
;	-std=c++20
;   -ffast-math
	-Wl,-u,_printf_float
;	-Wl,-Map,firmware.map
 	-D RELEASE
	-DDEBUG_LEVEL=DEBUG_NONE
	-Ofast
extra_scripts = post:extra_script.py   ; only if you want a compiled .hex file as well as the .bin file

[env:win_stm32f103c8_debug]
platform = ststm32
board = genericSTM32F103C8
board_build.f_cpu = 72000000L
board_build.ldscript = STM32F103C8_FLASH_platformio.ld
framework = stm32cube
debug_tool = stlink
upload_protocol = stlink
upload_flags = -c set CPUTAPID 0x2ba01477                 ; because they use a clone STM32F103 on the PCB
build_type = debug
board_build.stm32cube.custom_config_header = yes
board_build.stm32cube.system_file = yes
build_flags =
    -Idrivers/STM32F1xx_HAL_Driver/Inc 
    -Idrivers/STM32F1xx_HAL_Driver/Inc/Legacy 
    -Idrivers/CMSIS/Device/ST/STM32F1xx/Include 
    -Idrivers/CMSIS/Include 
	-std=c++11
;	-std=c++14
;	-std=c++17
;	-std=c++20
;	-ffast-math
	-Wl,-u,_printf_float
;	-Wl,-Map,firmware.map
	-D DEBUG
	-DDEBUG_LEVEL=3
	-O0
extra_scripts = post:extra_script.py   ; only if you want a compiled .hex file as well as the .bin file
debug_server =
	${platformio.packages_dir}/tool-openocd/bin/openocd.exe
	-s ${platformio.packages_dir}/tool-openocd/scripts
	-f interface\stlink.cfg
	-c "transport select hla_swd"
	-c "set CPUTAPID 0x2ba01477"
	-f target\stm32f1x.cfg
	-c "reset_config none"
